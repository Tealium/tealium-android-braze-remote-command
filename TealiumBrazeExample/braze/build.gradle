apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
        }
    }

    sourceSets {
        release {
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }

        debug {
            manifest.srcFile 'src/androidTest/AndroidManifest.xml'
        }

        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.tealium:library:5.5.+'
    implementation 'com.appboy:android-sdk-ui:3.5.+'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    //testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

//Copy the braze-release.aar into the test app.
//In Release mode, the app will use the .aar instead of the :braze project reference so we can
//do some basic verification.
afterEvaluate {
    assembleRelease.doLast {
        copy {
            println "Copying " + file("$buildDir/outputs/aar/braze-release.aar")
            from file("$buildDir/outputs/aar/braze-release.aar")
            println "to " + file("../app/libs")
            into file("../app/libs")
        }
    }
}


